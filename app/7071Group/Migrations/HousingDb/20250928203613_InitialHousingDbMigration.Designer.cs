// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _7071Group.Data;

#nullable disable

namespace _7071Group.Migrations.HousingDb
{
    [DbContext(typeof(HousingDbContext))]
    [Migration("20250928203613_InitialHousingDbMigration")]
    partial class InitialHousingDbMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("_7071Group.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MonthlyRent")
                        .HasColumnType("TEXT");

                    b.HasKey("AssetID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("_7071Group.Models.DamageReport", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RepairCost")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportID");

                    b.HasIndex("AssetID");

                    b.ToTable("Damage_Report", (string)null);
                });

            modelBuilder.Entity("_7071Group.Models.RentalHistory", b =>
                {
                    b.Property<int>("AssetID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RenterID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HistoryID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AssetID", "RenterID");

                    b.HasIndex("RenterID");

                    b.ToTable("Rental_History", (string)null);
                });

            modelBuilder.Entity("_7071Group.Models.Renter", b =>
                {
                    b.Property<int>("RenterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyDoctor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("RenterID");

                    b.ToTable("Renters");
                });

            modelBuilder.Entity("_7071Group.Models.DamageReport", b =>
                {
                    b.HasOne("_7071Group.Models.Asset", null)
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("_7071Group.Models.RentalHistory", b =>
                {
                    b.HasOne("_7071Group.Models.Asset", null)
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_7071Group.Models.Renter", null)
                        .WithMany()
                        .HasForeignKey("RenterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
