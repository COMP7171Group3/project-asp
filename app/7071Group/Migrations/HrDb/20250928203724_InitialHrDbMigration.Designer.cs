// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _7071Group.Data;

#nullable disable

namespace _7071Group.Migrations.HrDb
{
    [DbContext(typeof(HrDbContext))]
    [Migration("20250928203724_InitialHrDbMigration")]
    partial class InitialHrDbMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("_7071Group.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnCall")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVacation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShiftID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttendanceID");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("_7071Group.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReportsTo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SalaryRate")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.HasIndex("ReportsTo");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("_7071Group.Models.Payroll", b =>
                {
                    b.Property<int>("PayrollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Deductions")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("TEXT");

                    b.HasKey("PayrollID");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("_7071Group.Models.Shift", b =>
                {
                    b.Property<int>("ShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnCall")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ShiftID");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("_7071Group.Models.Employee", b =>
                {
                    b.HasOne("_7071Group.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("ReportsTo")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
